#! /bin/sh
# Copyright (c) 2010 KNEIP S.A.
#
# Author: Jonathan Tron <jonathan.tron@kneip.com>
#
# /etc/init.d/nginx
#
### BEGIN INIT INFO
# Provides: nginx
# Required-Start: $network $remote_fs
# Required-Stop: $network $remote_fs
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Description: Start nginx
### END INIT INFO

NGINX_BIN=<%= node[:nginx][:src_binary] %>
test -x $NGINX_BIN || exit 5

# default options, overruled by items in sysconfig
NGINX_GLOBAL=""

NGINX_SYSCONFIG=/etc/sysconfig/nginx
test -r $NGINX_SYSCONFIG || exit 6
. $NGINX_SYSCONFIG

. /etc/rc.status

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_failed        set local and overall rc status to failed
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status

# First reset status of this service
rc_reset

case "$1" in 
  start)
    echo -n $"Starting $NGINX_BIN: "
    options=""
    if [ "${NGINX_GLOBAL}" != ""  ]; then
        options="-g ${NGINX_GLOBAL}"
    fi
    ## Start daemon with startproc(8). If this fails  
    ## the return value is set appropriately by startproc.
    startproc $NGINX_BIN $options
    # Remember status and be verbose 
    rc_status -v
    ;;
  stop)
    echo -n $"Stopping $NGINX_BIN: "
    ## Stop daemon with killproc(8) and if this fails  
    ## killproc sets the return value according to LSB.  
    killproc -TERM $NGINX_BIN
    # Remember status and be verbose 
    rc_status -v
  	;;
  status)
    checkproc $NGINX_BIN
    rc_status -v
    ;;
  restart)
    $0 stop
    $0 start
    ;;
  reload|force-reload)
    echo -n $"Reloading $NGINX_BIN: "
    killproc -HUP $NGINX_BIN
    rc_status -v
		;;
  condrestart)
    $0 status  
    if test $? = 0; then  
      $0 restart  
    else  
      rc_reset    # Not running is not a failure.
    fi  
    # Remember status and be quiet  
    rc_status
    ;;
  probe)  
    ## Optional: Probe for the necessity of a reload, print out the  
    ## argument to this init script which is required for a reload.  
    ## Note: probe is not (yet) part of LSB (as of 1.9)  
    test /etc/nginx/nginx.conf -nt /var/run/nginx.pid && echo reload
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart|probe}"
    exit 1 
esac

rc_exit